# docker-compose.yml
# Docker Compose configuration for local development

version: '3.8'

services:
  # Main application service
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/astro-whatsapp-bot
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  # MongoDB database
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Testing service
  test:
    build: .
    command: npm run test
    environment:
      - NODE_ENV=test
      - MONGODB_URI=mongodb://mongo:27017/astro-whatsapp-bot-test
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - app-network

  # Development service with hot reloading
  dev:
    build: .
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/astro-whatsapp-bot
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongo-data:
  redis-data: